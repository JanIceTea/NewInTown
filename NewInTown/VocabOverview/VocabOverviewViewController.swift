//
//  VocabOverviewViewController.swift
//  NewInTown
//
//  Created by Jan Trutzschler on 13/10/2018.
//  Copyright (c) 2018 teatracks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol VocabOverviewDisplayLogic: class {
    func displayVocabOverview(viewModel: VocabOverview.FetchVocabOverview.ViewModel)
}

class VocabOverviewViewController: UIViewController, VocabOverviewDisplayLogic {
    
    var interactor: VocabOverviewBusinessLogic?
    var router: (NSObjectProtocol & VocabOverviewRoutingLogic & VocabOverviewDataPassing)?
    
    @IBOutlet weak var vocabularyStackView: UIStackView!
    
    @IBOutlet weak var chineseStackView: UIStackView!
    
    @IBOutlet weak var pinyinStackView: UIStackView!
    
    @IBOutlet weak var englishStackview: UIStackView!
    
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setupVIPCycle()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setupVIPCycle()
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupUI()
        setupAccessibilityIdentifers()
        
        performRequest()
    }
    
    // MARK: Setup
    
    private func setupVIPCycle() {
        let viewController = self
        let interactor = VocabOverviewInteractor()
        let presenter = VocabOverviewPresenter()
        let router = VocabOverviewRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setupUI() {
        
    }
    
    private func setupAccessibilityIdentifers() {
    
    }
    
    // MARK: Actions
    
    
    @IBAction func didPressNextButton(_ sender: Any) {
    }
    
    // MARK: Perform an initial request
    
    func performRequest() {
        let request = VocabOverview.FetchVocabOverview.Request()
        interactor?.fetchVocabOverview(request: request)
    }
    
    func displayVocabOverview(viewModel: VocabOverview.FetchVocabOverview.ViewModel) {
        let vocab = viewModel.vocabulary
        for text in vocab {
            var label = UILabel(frame: CGRect(x: 0, y: 0, width: 80, height: 22))
            label.text = text.chinese
            chineseStackView.addArrangedSubview(label)
            
            label = UILabel(frame: CGRect(x: 0, y: 0, width: 80, height: 22))
            label.text = text.pinyin
            pinyinStackView.addArrangedSubview(label)

            label = UILabel(frame: CGRect(x: 0, y: 0, width: 80, height: 22))
            label.text = text.english
            englishStackview.addArrangedSubview(label)
        }
    }
}
