//
//  FirstScenePresenter.swift
//  NewInTown
//
//  Created by Jan T on 09/10/2018.
//  Copyright (c) 2018 teatracks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FirstScenePresentationLogic {
    func updateFirstScene(response: FirstScene.FetchFirstScene.Response)
    func updateWaitingTime(withString timeString: String)
}

class FirstScenePresenter: FirstScenePresentationLogic {
    
    weak var viewController: FirstSceneDisplayLogic?
    let worker = FirstSceneWorker()
    
    // MARK: Present FirstScene
    
    func updateFirstScene(response: FirstScene.FetchFirstScene.Response) {
    
        var viewModel = FirstScene.FetchFirstScene.ViewModel()
        guard let dialog = worker.getDialog(forStoryLineId: response.storyLineId, atIndex: response.nextIndex) else {
            return
        }
        
        viewModel.scoreString = String(response.score)
        viewModel.nextQuestion = dialog.question.english
        viewModel.timeToWaitString = response.timeToWaitString
        
        if let hasCorrectAnswer = response.hasCorrectAnswer {
            if hasCorrectAnswer {
                viewController?.displaySuccess(withMessage: "Great - Going to the next!")
            } else {
                viewController?.displayFailure(withMessage: "Ooops! Try again!")
            }
            
            if response.isBlockedForNext {
                viewController?.displayWaiting(withTimeString: viewModel.timeToWaitString)
                viewController?.displayScore(withString: viewModel.scoreString)
            } else {
                viewController?.displayFirstScene(viewModel: viewModel)
            }
            
        } else {
            if response.isBlockedForNext {
                viewController?.displayWaiting(withTimeString: viewModel.timeToWaitString)
                viewController?.displayScore(withString: viewModel.scoreString)
            } else {
                viewController?.displayFirstScene(viewModel: viewModel)
            }
        }
        

    }
    
    func updateWaitingTime(withString timeString: String) {
        viewController?.displayWaiting(withTimeString: timeString)
    }
}
