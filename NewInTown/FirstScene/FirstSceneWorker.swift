//
//  FirstSceneWorker.swift
//  NewInTown
//
//  Created by Jan T on 09/10/2018.
//  Copyright (c) 2018 teatracks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class StoryContentWorker {
    
    static var storyContentRoot: StoryContentRoot?

    func readJson() {
        guard let url = Bundle.main.url(forResource: "chinesepod_B3045", withExtension: "json") else {
            print("Missing stories file ...")
            return
        }
        
        do {
            let decoder = JSONDecoder()
            let data = try Data(contentsOf: url)
            let content = try decoder.decode(StoryContentRoot.self, from: data)
            StoryContentWorker.storyContentRoot = content
        } catch {
            print("Reading stories failed ...")
        }
    }
}

class FirstSceneWorker {
    
    static var storyCollection: StoryCollection?

    private var currentStoryIndex = 0
    
    func readJson() {
        guard let url = Bundle.main.url(forResource: "Stories", withExtension: "json") else {
            print("Missing stories file ...")
            return
        }

        do {
            let decoder = JSONDecoder()
            let data = try Data(contentsOf: url)
            let stories = try decoder.decode(StoryCollection.self, from: data)
            FirstSceneWorker.storyCollection = stories
        } catch {
            print("Reading stories failed ...")
        }
    }
    
    func getStoryLine(forId id: String) -> StoryLine? {
        guard let storyCollection = FirstSceneWorker.storyCollection else {
            return nil
        }
        for story in storyCollection.stories {
            for storyline in story.storylines {
                if storyline.id == id {
                    return storyline
                }
            }
        }
        return nil
    }
    
    func getDialog(forStoryLineId storyLineId: String, atIndex index: Int) -> Dialog? {
        guard let storyline = getStoryLine(forId: storyLineId) else {
            return nil
        }
        if index < storyline.dialogs.count {
            return storyline.dialogs[index]
        }
        return nil
    }
    
    func getNextStoryLineId(forStoryLineId storyLineId: String, atIndex index: Int) -> String {
        guard let storyline = getStoryLine(forId: storyLineId) else {
            return storyLineId
        }
        
        if index < storyline.dialogs.count {
            return storyLineId
        }
        
        guard let storyCollection = FirstSceneWorker.storyCollection else {
            return storyLineId
        }
        
        let allStoryLines = storyCollection.stories[currentStoryIndex].storylines
        
        guard let index = (allStoryLines.index { (storyline) -> Bool in
            storyline.id == storyLineId
        }) else {
            return storyLineId
        }
        let nextIndex = index + 1
        if nextIndex < allStoryLines.count {
            return allStoryLines[nextIndex].id
        }
        
        return storyLineId
    }

}
